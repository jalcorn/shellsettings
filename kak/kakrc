### Kakoune

# Show line numbers on left
addhl global/ number-lines -hlcursor -separator 'â”‚'
set-face global LineNumberCursor white,black+b

# Hide clippy
set global ui_options terminal_assistant=none

# Add scrolling bounds
set global scrolloff 9,5

# Set tab width
set-option global tabstop 4 

# Show whitespace characters
addhl global/ show-whitespaces
set-face global Whitespace rgb:969696+d

# Show matching char
addhl global/ show-matching

# Remove annoying comment kept on new line
set-option global disabled_hooks '.*-insert'

# Clipboard management mappings
map -docstring "yank the selection into the clipboard" global user y "<a-|> pbcopy<ret>"
map -docstring "paste the clipboard" global user p "<a-!> pbpaste<ret>"

### ##### #####
set-face global PrimaryCursor yellow+r

# This should add surround functionality (pressing ,s<surround with char>)
def -hidden surround-key %!info -title 'surround with' %^b,(,):  parenthesis block
B,{,}: braces block
r,[,]: brackets block
a,<lt>,<gt>: angle block
",Q: double quote string
',q: single quote string
`,g: grave quote string
c: custom object desc^
on-key %@ eval %sh&
    code=0
    case $kak_key in
        'b'|'('|')')       first='('          last=')'         ;;
        'B'|'{'|'}')       first='{'          last='}'         ;;
        'r'|'['|']')       first='['          last=']'         ;;
        'a'|'<lt>'|'<gt>') first='<lt>lt<gt>' last='<lt>gt<gt>';;
        '"'|'Q')           first='\"'         last='\"'        ;;
        "'"|'q')           first="\'"         last="\'"        ;;
        '`'|'g')           first='`'          last='`'         ;;
        'c')               code=2;;
        *)                 code=9;;
    esac

    case $code in
        0) echo "execute-keys :surround<space>$first<space>$last<ret>";;
        2) echo "execute-keys :surround";;
        *) echo "execute-keys <esc>";;
    esac
&@!

def -params 1..2 -docstring \
"surround <before> [<after>]: Add <before> before selections
                             If <after> is provided: add <after> after selections
                                               else: add <before> after selections" \
surround %@ eval -draft %sh&
    start=$1
    end=$2
    if [ -z "$2" ]
        then
            end=$start
    fi
    echo "execute-keys i$start<esc>a$end<esc>"
&@

map global user s ":surround-key<ret>" -docstring "surround selection"
map global user d "i<backspace><esc>a<del><esc>" -docstring "delete surrounding chars"
